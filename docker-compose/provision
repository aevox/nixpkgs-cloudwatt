#!/usr/bin/env bash

# check api

cp provision.json ./provision_file.json
tmp=$(mktemp)
echo "prepare provisioning_file ..."
for service in control vrouter-master vrouter
do
  i=0
  for (( i=0; i<$(curl -s localhost:8500/v1/catalog/service/opencontrail-$service | jq length); i++ )) # loop until the number of service replicat
  do
    container=$(curl -s localhost:8500/v1/catalog/service/opencontrail-$service | jq --arg I "$i" -r ' .[$I | tonumber].ServiceID | split(":") | .[1] ')
    ip="$(curl -s localhost:8500/v1/catalog/service/opencontrail-$service | jq --arg I "$i" -r ' .[$I | tonumber].ServiceAddress ')"
    hostname=$(docker inspect -f '{{.Config.Hostname}}' $container)
    case $service in
      ("control")  jq --arg Ip "$ip" --arg Hostname "$hostname" '.provision."bgp-router" += [{"router-asn":64518,"router-ip":$Ip,"router-name":$Hostname}]' provision_file.json > "$tmp" && mv "$tmp" provision_file.json ;;
      ("vrouter-master") jq --arg Ip "$ip" --arg Hostname "$hostname" '.provision.vrouter += [{"vrouter-ip":"192.168.2.1","vrouter-name":"compute-01"}]' provision_file.json > "$tmp" && mv "$tmp" provision_file.json ;;
      ("vrouter")  jq --arg Ip "$ip" --arg Hostname "$hostname" '.provision.vrouter += [{"vrouter-ip":"192.168.2.2","vrouter-name":"compute-02"}]' provision_file.json > "$tmp" && mv "$tmp" provision_file.json ;;

    esac
  done
done
api_ip=$(curl -s localhost:8500/v1/catalog/service/opencontrail-api | jq -r .[0].ServiceAddress)
echo "api address" $api_ip
contrail-api-cli -H $api_ip provision -f provision_file.json
echo "provisioning done"
